env:
  global:
  - 'PS4=''+(${BASH_SOURCE}:${LINENO}): ${FUNCNAME[0]:+${FUNCNAME[0]}(): }'''
  - TEST_DEPENDS="numpy==1.11.1"
  - BDIST_PARAMS=""
  - USE_CCACHE=1
  - PLAT=x86_64
  - UNICODE_WIDTH=32

language: generic

sudo: required

services: docker

dist: trusty

git:
  submodules: false

cache:
  directories:
  - "$HOME/Library/Caches/Homebrew"
  - "/usr/local/Homebrew/"
  - "$HOME/local_bottle_metadata"
  - "$HOME/.ccache"

matrix:
  fast_finish: true
  include:
  - os: linux
    env:
    - MB_PYTHON_VERSION=3.5
    - ENABLE_CONTRIB=1
    - ENABLE_HEADLESS=0
    cache:
      directories: "$HOME/.ccache"
  - os: linux
    env:
    - MB_PYTHON_VERSION=3.5
    - PLAT=i686
    - ENABLE_CONTRIB=1
    - ENABLE_HEADLESS=0
    cache:
      directories: "$HOME/.ccache"
  - os: linux
    env:
    - MB_PYTHON_VERSION=3.6
    - TEST_DEPENDS=numpy==1.11.3
    - ENABLE_CONTRIB=1
    - ENABLE_HEADLESS=0
    cache:
      directories: "$HOME/.ccache"
  - os: linux
    env:
    - MB_PYTHON_VERSION=3.6
    - PLAT=i686
    - TEST_DEPENDS=numpy==1.11.3
    - ENABLE_CONTRIB=1
    - ENABLE_HEADLESS=0
    cache:
      directories: "$HOME/.ccache"

# The first line is printed in the folding header in Travis output
before_install: |
    # Check out and prepare the source
    set -e
    # Multibuild doesn't have releases, so --depth would break eventually (see
    # https://superuser.com/questions/1240216/server-does-not-allow-request-for-unadvertised)
    git submodule update --init multibuild
    source multibuild/common_utils.sh
    # https://github.com/matthew-brett/multibuild/issues/116
    if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then export ARCH_FLAGS=" "; fi
    source multibuild/travis_steps.sh
    # This sets -x
    source multibuild_customize.sh
    echo $ENABLE_CONTRIB > contrib.enabled
    echo $ENABLE_HEADLESS > headless.enabled
    
    if [ -n "$IS_OSX" ]; then
        TAPS="$(brew --repository)/Library/Taps"
        if [ -e "$TAPS/caskroom/homebrew-cask" -a -e "$TAPS/homebrew/homebrew-cask" ]; then
            rm -rf "$TAPS/caskroom/homebrew-cask"
        fi
        find "$TAPS" -type d -name .git -exec \
                bash -xec '
                    cd $(dirname '\''{}'\'')
                    git clean -fxd
                    git status' \;
                    
        brew_cache_cleanup
    fi
    
    before_install
    # Not interested in travis internal scripts' output
    set +x

install: |
  # Build and package
  set -x
  build_wheel $REPO_DIR $PLAT
  if [ -n "$USE_CCACHE" ]; then ccache --show-stats; fi
  set +x

script: |
  # Install and run tests
  set -x
  install_run $PLAT && rc=$? || rc=$?
  set +x

  #otherwise, Travis logic terminates prematurely
  #https://travis-ci.community/t/shell-session-update-command-not-found-in-build-log-causes-build-to-fail-if-trap-err-is-set/817
  trap ERR

  test "$rc" -eq 0

before_cache: |
    # Cleanup dirs to be cached
    set -x
    if [ -n "$IS_OSX" ]; then
        # When Taps is cached, this dir causes "Error: file exists" on `brew update`
        if [ -e "$(brew --repository)/Library/Taps/homebrew/homebrew-cask/homebrew-cask" ]; then
            rm -rf "$(brew --repository)/Library/Taps/homebrew/homebrew-cask/homebrew-cask"
        fi
        brew_cache_cleanup
        
    fi
    set +x

deploy:
  provider: releases
  api_key:
    secure: AtM2g/4gJz2ZR4z6+p9GOkUiBIQGKgpJvkq48CgAeTTjEX0CXxn5XSwat4U8Sxr2QEiWj7giRsZlwW8P5TyPXAZ/R7oy1/hsfHQPpz9PKfrKFRpchgWdqiKfyTJwcTcEgo5VIhWmsnvXhbaQZPRnvAhvZ0b3wHfx/ymbsoyD1oyLJMDWq+K8bPvXni+A+vzv+PsSM4kF+AscjSO3ntVs6lBu7PiXFuz9vmmUY7jDkty3GmPzKA1wav1WNvWklSfiiIZvtGU2wj9iUClhYMibzY9lH4fowG9R2m6L3NjtefFCS17XhANKh6iEm3jVVifMjRvThCuYorEC67HDK3RLVJgwGhGWC5Jbr4Xc7aFTgd7lIftHL/alNcmLmiOpGcle45Uc1sdih1e0r5kkoszUAH+QNBXlN10ayNIP/z8iLv6LgT0qj0RIxvqleAJKawohhPqIPNVeSd+v+Vn7l7zbiYtiiZy03a94nvh1IbXPi6p2QB2uGy1/+3B9eipPiA9yamQh5dx2qP4j30iFUh4kMU2KIPfu2w6es+P5/TCVEebZwD1KqERBlKOCAW4g5EGg4qO2AXKN7as7VBge6KITSUSJogc5GhMgyd0tclON60vLeLpEyVv/C2Sq24WDuS8uy9IFm0vs1pzkCmBxEpFxvOyh20eWkVIpOfVPs27U/l0=
  file_glob: true
  file: "${TRAVIS_BUILD_DIR}/dist"
  on:
    repo: Swind/opencv-python
    tags: true
